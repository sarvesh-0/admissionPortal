package com.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.multipart.MultipartFile;

import com.dto.AdmissionFormDTO;
import com.entity.AdmissionForm;
import com.repository.AdmissionFormRepository;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.util.List;
import java.util.Objects;
import java.util.UUID;

@Service
public class AdmissionFormService {

   @Autowired
   private AdmissionFormRepository admissionFormRepository;

   @Value("${file.upload-dir}") // Configure this in application.properties
   private String uploadDir;

   @Transactional
   public AdmissionForm createAdmissionForm(AdmissionFormDTO formDTO) throws IOException {
       // Validate files (size, type) - you can create a separate validator class

       AdmissionForm form = new AdmissionForm();

       form.setTitle(formDTO.getTitle());
       form.setFirstName(formDTO.getFirstName());
       form.setMiddleName(formDTO.getMiddleName());
       form.setLastName(formDTO.getLastName());
       form.setFullName(formDTO.getFirstName()+" "+formDTO.getMiddleName()+" "+formDTO.getLastName());
       form.setMotherName(formDTO.getMotherName());
       form.setGender(formDTO.getGender());
       form.setAddress(formDTO.getAddress());
       form.setTaluka(formDTO.getTaluka());
       form.setDistrict(formDTO.getDistrict());
       form.setPinCode(formDTO.getPinCode());
       form.setState(formDTO.getState());
       form.setMobile(formDTO.getMobile());
       form.setEmail(formDTO.getEmail());
       form.setAadhaar(formDTO.getAadhaar());
       form.setDob(formDTO.getDob());
       form.setReligion(formDTO.getReligion());
       form.setCasteCategory(formDTO.getCasteCategory());
       form.setCaste(formDTO.getCaste());
       form.setPhysicallyHandicapped(formDTO.getPhysicallyHandicapped());

       // Handle file uploads
       form.setMarksheet(saveFile(formDTO.getMarksheet()));
       form.setPhoto(saveFile(formDTO.getPhoto()));
       form.setSignature(saveFile(formDTO.getSignature()));
       return admissionFormRepository.save(form);
   }



   private String saveFile(MultipartFile file) throws IOException {
       if (file.isEmpty()) {
           return null; // Or handle the case where no file is uploaded
       }

       String originalFilename = file.getOriginalFilename();

       // Use UUID for unique filenames
       String uniqueFilename = UUID.randomUUID().toString() + "_" + originalFilename;

       // Create directory if it doesn't exist
       Path uploadPath = Paths.get(uploadDir);
       if (!Files.exists(uploadPath)) {
           Files.createDirectories(uploadPath);
       }


       Path filePath = uploadPath.resolve(uniqueFilename); // Use Paths.get
       Files.copy(file.getInputStream(), filePath, StandardCopyOption.REPLACE_EXISTING);
       return filePath.toString(); // Return the full path

   }

   public List<AdmissionForm> getAllForms() {
       return admissionFormRepository.findAll();
   }

   // Add methods for get, update, delete, etc. as needed
}